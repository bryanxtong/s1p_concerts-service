spring.application.name=s1p-concerts-service
spring.data.mongodb.host=mongodb.default.svc.cluster.local
spring.data.mongodb.database=testdb
spring.data.mongodb.username=test
spring.data.mongodb.password=test
spring.cloud.kubernetes.discovery.filter = metadata.labels['tickets']
management.endpoints.web.exposure.include = *
management.endpoint.health.enabled=true
management.endpoint.restart.enabled=true
management.endpoint.info.enabled=true

spring.cloud.kubernetes.discovery.enabled=true
spring.cloud.discovery.enabled=true
##Enable blocking discovery client for k8s using RestTemplate
spring.cloud.discovery.blocking.enabled=true
spring.cloud.discovery.reactive.enabled=false
#via the spring cloud kubernetes discovery server to find the instances
spring.cloud.kubernetes.discovery.discovery-server-url=http://spring-cloud-kubernetes-discoveryserver.default.svc.cluster.local:80
spring.cloud.kubernetes.discovery.enabled=true
spring.cloud.discovery.enabled=true
##Enable blocking discovery client for k8s using RestTemplate
spring.cloud.discovery.blocking.enabled=true
spring.cloud.discovery.reactive.enabled=false

#via the spring cloud kubernetes configserver to load the properties of configmap and secrets
spring.config.import=optional:configserver:http://spring-cloud-kubernetes-configserver.default.svc.cluster.local:8888


